import google.generativeai as genai

class Gemini:
    def __init__(self,
                 api_key: str = "",
                 model_version: str = "gemini-pro"):
        
        self.api_key = api_key
        self.model_version = model_version

        self._create_model()

    
    def _create_model(self):

        try:
            genai.configure(api_key=self.api_key)
            self.model = genai.GenerativeModel(self.model_version)

        except Exception as e:
            print(f"It was no possible access gemini model in charge model. ERROR: {str(e)}")


    def send_message(self, message, temperature=1.0):  
        try:

            response = self.model.generate_content(message, generation_config=genai.types.GenerationConfig(temperature=temperature))
            
            print(f"Message was created!")
        except Exception as e:
            print(f"It was no possible access gemini model in send message. ERROR: {str(e)}")
            return False
        
        print(f"Document was generated by {self.model_version}")
        
        return response.text
    
